[defaults]
# (boolean) This option forces color mode even when running without a TTY or the "nocolor" setting is True.
force_color=False

# (boolean) This setting allows suppressing colorizing output, which is used to give a better indication of failure and status information.
nocolor=False

# (boolean) If you have cowsay installed but want to avoid the 'cows' (why????), use this.
nocows=False

# (string) When a collection is loaded that does not support the running Ansible version (with the collection metadata key `requires_ansible`).
collections_on_ansible_version_mismatch=warning
#
# (pathspec) Colon separated paths in which Ansible will search for collections content. Collections must be in nested *subdirectories*, not directly in these directories. For example, if ``COLLECTIONS_PATHS`` includes ``'{{ ANSIBLE_HOME ~ "/collections" }}'``, and you want to add ``my.collection`` to that directory, it must be saved as ``'{{ ANSIBLE_HOME} ~ "/collections/ansible_collections/my/collection" }}'``.
collections_path=.galaxy

# (boolean) A boolean to enable or disable scanning the sys.path for installed collections
collections_scan_sys_path=False

# (boolean) This controls whether an Ansible playbook should prompt for a vault password.
ask_vault_pass=False

# (pathlist) Comma separated list of Ansible inventory sources
inventory=inventory.ini

# (string) Sets the macro for the 'ansible_managed' variable available for :ref:`ansible_collections.ansible.builtin.template_module` and :ref:`ansible_collections.ansible.windows.win_template_module`.  This is only relevant for those two modules.
ansible_managed=Ansible managed

# (boolean) Makes role variables inaccessible from other roles.
# This was introduced as a way to reset role variables to default values if a role is used more than once in a playbook.
private_role_vars=False

# (pathspec) Colon separated paths in which Ansible will search for Roles.
roles_path=.galaxy:roles

# (path) The vault password file to use. Equivalent to --vault-password-file or --vault-id
# If executable, it will be run and the resulting stdout will be used as the password.
vault_password_file=~/.vault_key

# (boolean) Toggle to control the showing of deprecation warnings
deprecation_warnings=True

# (boolean) Normally ``ansible-playbook`` will print a header for each task that is run. These headers will contain the name: field from the task if you specified one. If you didn't then ``ansible-playbook`` uses the task's action to help you tell which task is presently running. Sometimes you run many of the same action and so you want more information about the task to differentiate it from others of the same action. If you set this variable to True in the config then ``ansible-playbook`` will also include the task's arguments in the header.
# This setting defaults to False because there is a chance that you have sensitive values in your parameters and you do not want those to be printed.
# If you set this to True you should be sure that you have secured your environment's stdout (no one can shoulder surf your screen and you aren't saving stdout to an insecure file) or made sure that all of your playbooks explicitly added the ``no_log: True`` parameter to tasks which have sensitive values See How do I keep secret data in my playbook? for more information.
display_args_to_stdout=False
#
# (boolean) By default Ansible will issue a warning when there are no hosts in the inventory.
# These warnings can be silenced by adjusting this setting to False.
localhost_warning=True

# (string) Action to take when a module parameter value is converted to a string (this does not affect variables). For string parameters, values such as '1.00', "['a', 'b',]", and 'yes', 'y', etc. will be converted by the YAML parser unless fully quoted.
# Valid options are 'error', 'warn', and 'ignore'.
# Since 2.8, this option defaults to 'warn' but will change to 'error' in 2.12.
string_conversion_action=error

[privilege_escalation]
# (boolean) Toggle to prompt for privilege escalation password.
become_ask_pass=True

# (string) Privilege escalation method to use when `become` is enabled.
become_method=sudo

# (string) The user your login/remote user 'becomes' when using privilege escalation, most systems will use 'root' when no user is specified.
# become_user=root


[diff]
# (bool) Configuration toggle to tell modules to show differences when in 'changed' status, equivalent to ``--diff``.
always=False

# (integer) How many lines of context to show when displaying the differences between files.
context=3


[inventory]
# (string) This setting changes the behaviour of mismatched host patterns, it allows you to force a fatal error, a warning or just ignore it
host_pattern_mismatch=warning

# (boolean) If 'true', it is a fatal error when any given inventory source cannot be successfully parsed by any available inventory plugin; otherwise, this situation only attracts a warning.
any_unparsed_is_failed=False

# (list) List of enabled inventory plugins, it also determines the order in which they are used.
enable_plugins=host_list, script, auto, yaml, ini, toml

# (bool) Controls if ansible-inventory will accurately reflect Ansible's view into inventory or its optimized for exporting.
export=False

# (bool) If 'true' it is a fatal error if every single potential inventory source fails to parse, otherwise this situation will only attract a warning.
unparsed_is_failed=False

# (boolean) By default Ansible will issue a warning when no inventory was loaded and notes that it will use an implicit localhost-only inventory.
# These warnings can be silenced by adjusting this setting to False.
inventory_unparsed_warning=True

[tags]
# (list) default list of tags to skip in your plays, has precedence over Run Tags
skip=galaxy

